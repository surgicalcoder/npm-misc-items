/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../src/misc.module';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '../../src/SecurityService';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/i18n/tokens';
import * as import7 from '@angular/http/src/http';
import * as import8 from '@angular/router/src/router';
class MiscModuleInjector extends import0.NgModuleInjector<import1.MiscModule> {
  _CommonModule_0:import2.CommonModule;
  _MiscModule_1:import1.MiscModule;
  __NgLocalization_2:import3.NgLocaleLocalization;
  __SecurityService_3:import4.SecurityService;
  constructor(parent:import5.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_2():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_2 == null)) { (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import6.LOCALE_ID))); }
    return this.__NgLocalization_2;
  }
  get _SecurityService_3():import4.SecurityService {
    if ((this.__SecurityService_3 == null)) { (this.__SecurityService_3 = new import4.SecurityService(this.parent.get(import7.Http),this.parent.get(import8.Router))); }
    return this.__SecurityService_3;
  }
  createInternal():import1.MiscModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._MiscModule_1 = new import1.MiscModule();
    return this._MiscModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.MiscModule)) { return this._MiscModule_1; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_2; }
    if ((token === import4.SecurityService)) { return this._SecurityService_3; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MiscModuleNgFactory:import0.NgModuleFactory<import1.MiscModule> = new import0.NgModuleFactory(MiscModuleInjector,import1.MiscModule);